package com.osp.npo.task;
import com.osp.npo.common.controller.BackupController;
import com.osp.npo.common.controller.RestoreController;
import com.osp.npo.common.util.Util;
import com.osp.npo.common.util.database.DBConfig;
import com.osp.npo.common.util.database.DBPool;
import java.io.*;
import java.sql.Connection;

/**
 * Created by QUYENLC on 12/07/2021.
 */
public class BackUpDBStart extends Thread{
	static BufferedReader keyboard;
	/** Connection */
	private static Connection connection = null;
	static
	{
		keyboard = new BufferedReader(new InputStreamReader(System.in));
	}
	public static void main(String[] arg) {
		new BackUpDBStart().start();

		try
		{
			DBConfig.loadProperties();
		}
		catch(IOException e)
		{
			System.out.println((new StringBuilder("Khong tim thay file cau hinh: ")).append(e.getMessage()).toString());
		}

		DBPool.load();

	}
	
	
    public void run () {
		new BackupThreadAuto().start();
		new  RemoveFileBackUpThreadAuto().start();
		for(; true; showMenu()) { }
    }

	private void showMenu()
	{
 		System.out.println("---------------------");
		System.out.println("1 - Chọn backup tất cả dữ liệu trong database");
		System.out.println("2 - Chọn backup dữ liệu theo bảng");
		System.out.println("3 - Chọn backup dữ liệu theo bảng với thời gian");
		System.out.println("4 - Chọn restore dữ liệu theo file backup");
		System.out.println("5 - Tối ưu hóa dữ liệu lưu trữ");
		System.out.println("6 - Quit");
		System.out.println("---------------------");
		String option = "";
		try
		{
			option = keyboard.readLine();
		}
		catch(Exception e)
		{
			System.out.println("showMenu:" + e.getMessage());
		}
		System.out.println("Bạn hãy lựa chọn option theo menu");
		BackupController backupController =  new BackupController();
		RestoreController restoreController = new RestoreController();
		if("1".equals(option)){
			System.out.println("----------Tiến hành backup tất cả dữ liệu------------");
			backupController.backupDBAll();
		}
		else if("2".equals(option)){
			System.out.println("----------Bắt đầu backup dữ liệu theo bảng-----------");
			String typeBackUp = Util.getParam("Bạn hãy chọn loại backup dữ liệu? A(all)/T(table)", "A");
			if("A".equals(typeBackUp.toUpperCase())){
				backupController.backupDBAll();
			}
			else if("T".equals(typeBackUp.toUpperCase())){
				backupController.backupDBBySelectTable();
			}
			else {
				Util.exit();
			}
		}
		else if("3".equals(option)){
			System.out.println("----------Bắt đầu backup dữ liệu bảng phpviet_file_data với thời gian-----------");
            backupController.backupDBBySelectTableWithTime();
		}

		else if("4".equals(option)){
			System.out.println("----------Bắt đầu restore dữ liệu-----------");
			restoreController.restoreThread();
		}
		else if("5".equals(option)){
			System.out.println("----------Tiến hành tối ưu hóa dữ liệu-----------");
				new BackUpFileDataThread().run();
		}
		else if("6".equals(option)){
			Util.exit();
		}
	}
}
